[gd_resource type="Shader" format=3 uid="uid://bweqk1tsbehxw"]

[resource]
code = "//shader_type canvas_item;
//
//uniform float speed = 2.0;
//uniform float strength = 0.5;
//uniform float y_origin = 0.0;
//uniform int restrict_dir : hint_range(-1,1) = 0;
//
//void vertex() {
	//float x = sin(TIME*speed)*(VERTEX.y-y_origin)*strength+sin(TIME*speed)*strength*8.0;
    //VERTEX.x += x*float(restrict_dir==0)+abs(x)*float(-restrict_dir);
//}

shader_type canvas_item;

// Wind properties
uniform vec2 wind_direction = vec2(1, 0);
uniform float wind_speed = 1.0;
uniform float wind_strength = 0.1;

// Sway properties
uniform float sway_frequency = 1.0;
uniform float sway_magnitude = 0.1;

void vertex() {
    // Calculate the sway based on the vertex's height and the sway properties
    float sway_factor = (1.0 - VERTEX.y) * sway_magnitude;
    vec2 sway_offset = wind_direction * sway_factor * sin(TIME * sway_frequency + VERTEX.y);
    
    // Apply the sway offset to the vertex position
    VERTEX.xy += sway_offset;
}"
