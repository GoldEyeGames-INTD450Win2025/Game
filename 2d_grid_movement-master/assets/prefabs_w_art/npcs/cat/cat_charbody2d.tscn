[gd_scene load_steps=28 format=3 uid="uid://dhu28sp1ltyqf"]

[ext_resource type="Texture2D" uid="uid://lp6snehvc1ur" path="res://assets/prefabs_w_art/npcs/cat/cat_sprite.png" id="1_p8l1g"]
[ext_resource type="Texture2D" uid="uid://c43clf8u8j18r" path="res://assets/art_free/skristi_catgray/64x64/top-down/walk_4.png" id="2_0nrcc"]
[ext_resource type="AudioStream" uid="uid://dlcwg2y4fbviy" path="res://assets/audio/audio_free_sfx/cat_meow_purr/cat_purractive_loop.wav" id="3_4sm1b"]

[sub_resource type="GDScript" id="GDScript_ho0mx"]
script/source = "extends CharacterBody2D

# States
enum State { IDLE, MOVING, RUNNING_TO_PLAYER, AT_PLAYER, GUIDING_AWAY_PLAYER,
GUIDING_PIECE1,
GUIDING_PIECE2,
GUIDING_PIECE3left,
GUIDING_PIECE3up
}

@onready var timer: Timer = $Timer
@export var speed: int = 200
@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D
@onready var sfx_moving: AudioStreamPlayer2D = $Audio_catwalking
@onready var sfx_ambient: AudioStreamPlayer2D = $Audio_meowpurr
var current_state = State.IDLE
var velocity_vector: Vector2 = Vector2.ZERO
var player: CharacterBody2D = null
var player_position: Vector2 = Vector2.ZERO
var player_closeness_trigger = 30
var mural: Node2D = null
var mural_position: Vector2 = Vector2.ZERO
var mural_closeness_trigger = 10
var one_time_trigger__timer = 0

var piece1: Node2D = null
var piece2: Node2D = null
var piece3left: Node2D = null
var piece3up: Node2D = null

func _ready():
	# Find the Activator1 (Area2D) and connect its signal
	#var zone_Activator1_Area2D = get_node_or_null(\"../Activator1_Area2D\")  # Adjust path as needed
	#if zone_Activator1_Area2D:
		#zone_Activator1_Area2D.player_near_Activator1_Area2D.connect(_on_player_nearby_Activator1)
		#print(\"Connected to signal: Activator1_Area2D\")

	# Frog interaction, using Area2D trigger: 
	# Find the Area2D and connect the signal
	var zone_Activator2_Area2D = get_node_or_null(\"../Activator2_Area2D\")  # Adjust path as needed
	if zone_Activator2_Area2D:
		zone_Activator2_Area2D.player_near_Activator2_Area2D.connect(_on_player_nearby_Activator2)
		print(\"Connected to signal: player_near_Activator2_Area2D\")
	var zone_PlayerAtMural = get_node_or_null(\"../Activator3_Area2D\")  # Adjust path as needed
	if zone_PlayerAtMural:
		zone_PlayerAtMural.player_near_Activator3_Area2D.connect(player_near_Activator3_Area2D)
		print(\"Connected to signal: player_near_Activator3_Area2D\")
	var zone_PlayerAtPiece1 = get_node_or_null(\"../ActivatorPiece1_Area2D\")  # Adjust path as needed
	if zone_PlayerAtPiece1:
		zone_PlayerAtPiece1.player_near_ActivatorPiece1_Area2D.connect(_on_player_at_Piece1)
		print(\"Connected to signal: player_near_ActivatorPiece1_Area2D\")
	var zone_PlayerAtPiece2 = get_node_or_null(\"../ActivatorPiece2_Area2D\")  # Adjust path as needed
	if zone_PlayerAtPiece2:
		zone_PlayerAtPiece2.player_near_ActivatorPiece2_Area2D.connect(_on_player_at_Piece2)
		print(\"Connected to signal: player_near_ActivatorPiece2_Area2D\")
	var zone_PlayerAtPiece3left = get_node_or_null(\"../ActivatorPiece3left_Area2D\")  # Adjust path as needed
	if zone_PlayerAtPiece3left:
		zone_PlayerAtPiece3left.player_near_ActivatorPiece3left_Area2D.connect(_on_player_at_Piece3left)
		print(\"Connected to signal: player_near_ActivatorPiece3left_Area2D\")
		
	player = get_node_or_null(\"../Player_Char2D\")
	if player:
		player_position = player.global_position
		print(\"player.global_position\")
		print(player.global_position)
	else:
		print(\"Warning: No player position found!\")
	mural = get_node_or_null(\"../Mural\")
	if mural:
		mural_position = mural.global_position
	else:
		print(\"Warning: No mural position found!\")
	
	piece1 = get_node_or_null(\"../Piece1cat\")
	if !piece1:
		print(\"Warning: No piece1 position found!\")
	piece2 = get_node_or_null(\"../Piece2cat\")
	if !piece2:
		print(\"Warning: No piece2 position found!\")
	piece3left = get_node_or_null(\"../Piece3leftcat\")
	if !piece3left:
		print(\"Warning: No piece3left position found!\")
	piece3up = get_node_or_null(\"../Piece3upcat\")
	if !piece3up:
		print(\"Warning: No piece3up position found!\")
		
func _on_player_nearby_Activator2():
	print(\"Cat guide is activated\")
	current_state = State.RUNNING_TO_PLAYER
	
func _on_timer_timeout():
	current_state = State.GUIDING_AWAY_PLAYER
	
func player_near_Activator3_Area2D():
	print(\"Player at mural, cat moves to piece1\")
	current_state = State.GUIDING_PIECE1

func _on_player_at_Piece1():
	print(\"Player at piece1, cat moves to piece2\")
	current_state = State.GUIDING_PIECE2

#func _on_timer_timeout_Piece1():
	#current_state = State.GUIDING_PIECE1
	
func _on_player_at_Piece2():
	print(\"Player at piece1, cat moves to piece2\")
	current_state = State.GUIDING_PIECE3left
	
func _on_player_at_Piece3left():
	print(\"Player at piece3left, cat moves to piece3up\")
	current_state = State.GUIDING_PIECE3up

func _physics_process(delta: float):
	if current_state == State.RUNNING_TO_PLAYER:
		# Move toward the player's location
		var direction = (player.global_position - global_position).normalized()
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		# Adjust closeness threshold as needed
		if global_position.distance_to(player.global_position) < player_closeness_trigger:  
			print(\"Cat is at player!\")
			current_state = State.AT_PLAYER
			#frog.visible = false
	elif current_state == State.AT_PLAYER:
		velocity_vector = Vector2.ZERO
		animated_sprite.animation = \"idle\"
		animated_sprite.play()
		if one_time_trigger__timer == 0:
			print(\"cat timer connected\")
			timer.timeout.connect(_on_timer_timeout)
			one_time_trigger__timer = 1
			sfx_ambient.play()
			timer.start()
	elif current_state == State.GUIDING_AWAY_PLAYER:
		# Move down to puzzle
		var direction = (mural_position - global_position).normalized()
		#var direction = Vector2.DOWN
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		if global_position.distance_to(mural.global_position) < mural_closeness_trigger:  
			print(\"Cat is at mural!\")
			current_state = State.IDLE
	elif current_state == State.GUIDING_PIECE1:
		# Move down to puzzle
		var direction = (piece1.global_position - global_position).normalized()
		#var direction = Vector2.DOWN
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		if global_position.distance_to(piece1.global_position) < mural_closeness_trigger:  
			print(\"Cat is at piece1!\")
			current_state = State.IDLE
	elif current_state == State.GUIDING_PIECE2:
		# Move down to puzzle
		var direction = (piece2.global_position - global_position).normalized()
		#var direction = Vector2.DOWN
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		if global_position.distance_to(piece2.global_position) < mural_closeness_trigger:  
			print(\"Cat is at piece2!\")
			current_state = State.IDLE
	elif current_state == State.GUIDING_PIECE3left:
		# Move down to puzzle
		var direction = (piece3left.global_position - global_position).normalized()
		#var direction = Vector2.DOWN
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		if global_position.distance_to(piece3left.global_position) < mural_closeness_trigger:  
			print(\"Cat is at piece3left!\")
			current_state = State.IDLE
	elif current_state == State.GUIDING_PIECE3up:
		# Move down to puzzle
		var direction = (piece3up.global_position - global_position).normalized()
		#var direction = Vector2.DOWN
		velocity_vector = direction * speed * delta
		if direction == Vector2(0, 0):
			animated_sprite.animation = \"idle\"
			sfx_moving.stop()
		else:
			if abs(direction.x) > abs(direction.y):
				animated_sprite.animation = \"move_left\" if direction.x < 0 else \"move_right\"
			else:
				animated_sprite.animation = \"move_up\" if direction.y < 0 else \"move_down\"
			sfx_moving.pitch_scale = randf_range(0.5, 1.5)  # Randomize pitch to make sound different
			if not sfx_moving.playing:  # prevents overlapping sounds
				sfx_moving.play()
		# Set animation
		#animated_sprite.animation = \"run_to_frog\"
		animated_sprite.play()
		if global_position.distance_to(piece3up.global_position) < mural_closeness_trigger:  
			print(\"Cat is at piece3up!\")
			current_state = State.IDLE
			
	else:
		# default state is IDLE (but that is infered from 'else'
		velocity_vector = Vector2.ZERO
		animated_sprite.animation = \"idle\"
		animated_sprite.play()

	# NOTE: 'velocity' is a builtin parameter for move_and_slide()
	velocity = velocity_vector
	move_and_slide()
	
"

[sub_resource type="AtlasTexture" id="AtlasTexture_myk0e"]
atlas = ExtResource("1_p8l1g")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_2qwpn"]
atlas = ExtResource("1_p8l1g")
region = Rect2(0, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_hmf68"]
atlas = ExtResource("1_p8l1g")
region = Rect2(128, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_0guqk"]
atlas = ExtResource("1_p8l1g")
region = Rect2(256, 0, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_5txe7"]
atlas = ExtResource("1_p8l1g")
region = Rect2(0, 256, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_wy50v"]
atlas = ExtResource("1_p8l1g")
region = Rect2(128, 256, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_8nr67"]
atlas = ExtResource("1_p8l1g")
region = Rect2(256, 256, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_cep5t"]
atlas = ExtResource("1_p8l1g")
region = Rect2(0, 128, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_tf6f7"]
atlas = ExtResource("1_p8l1g")
region = Rect2(128, 128, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_hahu6"]
atlas = ExtResource("1_p8l1g")
region = Rect2(256, 128, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_lhaiv"]
atlas = ExtResource("1_p8l1g")
region = Rect2(0, 384, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_sqqgr"]
atlas = ExtResource("1_p8l1g")
region = Rect2(128, 384, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_qxt4s"]
atlas = ExtResource("1_p8l1g")
region = Rect2(256, 384, 128, 128)

[sub_resource type="AtlasTexture" id="AtlasTexture_2kvyj"]
atlas = ExtResource("2_0nrcc")
region = Rect2(0, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_5rpca"]
atlas = ExtResource("2_0nrcc")
region = Rect2(64, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_erqax"]
atlas = ExtResource("2_0nrcc")
region = Rect2(128, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rkosc"]
atlas = ExtResource("2_0nrcc")
region = Rect2(192, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_itbgu"]
atlas = ExtResource("2_0nrcc")
region = Rect2(256, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_05d4x"]
atlas = ExtResource("2_0nrcc")
region = Rect2(320, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_pwn5l"]
atlas = ExtResource("2_0nrcc")
region = Rect2(384, 0, 64, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_ufx2n"]
atlas = ExtResource("2_0nrcc")
region = Rect2(448, 0, 64, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_eortx"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_myk0e")
}],
"loop": true,
"name": &"idle",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2qwpn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hmf68")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0guqk")
}],
"loop": true,
"name": &"move_down",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5txe7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wy50v")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_8nr67")
}],
"loop": true,
"name": &"move_left",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_cep5t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tf6f7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hahu6")
}],
"loop": true,
"name": &"move_right",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lhaiv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sqqgr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qxt4s")
}],
"loop": true,
"name": &"move_up",
"speed": 7.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_2kvyj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5rpca")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_erqax")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rkosc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_itbgu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_05d4x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pwn5l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ufx2n")
}],
"loop": true,
"name": &"run_to_frog",
"speed": 12.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_rwq0c"]
size = Vector2(30, 30)

[node name="Cat_CharBody2D" type="CharacterBody2D"]
modulate = Color(0.529067, 0.529067, 0.529067, 1)
z_as_relative = false
y_sort_enabled = true
motion_mode = 1
script = SubResource("GDScript_ho0mx")
speed = 6000

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(0.7, 0.7)
sprite_frames = SubResource("SpriteFrames_eortx")
animation = &"move_down"
autoplay = "idle"
frame_progress = 0.318556
offset = Vector2(0, -48)

[node name="AnimatedSprite2D2" type="AnimatedSprite2D" parent="."]
visible = false
sprite_frames = SubResource("SpriteFrames_eortx")
animation = &"idle"
autoplay = "idle"

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_rwq0c")
disabled = true

[node name="Audio_catwalking" type="AudioStreamPlayer2D" parent="."]
visible = false
volume_db = -25.0
max_distance = 200.0
bus = &"SFX"

[node name="Audio_meowpurr" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("3_4sm1b")
max_distance = 200.0
bus = &"SFX"

[node name="Timer" type="Timer" parent="."]
wait_time = 12.0
one_shot = true
